页面
===============
**页面** 是向 PCL 右侧（或全屏）主页区域展示的内容。在构建器中，内置的页面类型有两类：

- **卡片堆叠页面（CardStackPage）**：最常使用的页面类型，使用多个卡片按次序排放，适用于一般场景。
- **纯XAML 页面（RawXamlPage）**：使用 XAML 语言编写的页面，适用于需要自定义复杂页面的场景。

当构建器构建页面时，会根据页面的类型执行相应的处理逻辑生成主页文件。

卡片堆叠页面
------------------------
卡片堆叠页面是构建器中最常用的页面类型，它允许用户通过多个卡片来组织和展示内容。

在生成时卡片堆叠页面会按照卡片引用的顺序依次生成并排列卡片。

要创建页面，需要在工程文件夹的 `pages` 目录下创建一个页面描述文件 `<页面名称>.yaml`。

页面描述文件的基本结构如下：

.. code-block:: yaml

    name: 页面名称
    alias:
      - alias1
      - 另一个别名
    cards:
      - card1
      - card2 | title = 卡片标题
      - card3 | isswaped = True
      - card4 | title = 卡片标题 | canswap = False
      - card5; card6
      - "LibraryA: card7"
      - "LibraryB:LibraryC:card8"
      - T:TemplateA | content = 历史版本
      - ${@CardReferenceProviderScript | arg1 | arg2 }

- name: 页面名称，必填项，页面的唯一标识符(可以文件名与不同)。
- alias: 页面别名列表，可选项，允许多个别名引用同一页面。
- cards: 卡片列表，必填项，列出页面中使用的卡片。

卡片列表中的每个条目可以是以下几种形式：

- **卡片名称**：直接引用卡片名称。
- **卡片名称 | 属性设置**：使用管道符 `|` 分隔的属性列表，可以指定卡片的标题、是否可折叠等属性。
- **卡片名称; 另一个卡片名称**：使用分号 `;` 分隔的多个卡片，分号后的卡片会被视为分号前的卡片的下一个卡片。
- **卡片库路径:卡片名称**：使用库名和卡片名的完整卡片引用组合来引用卡片。
- **模板引用**：使用 `T:` 前缀引用模板，并可以通过 `|` 分隔的参数来传递内容。
- **脚本引用**：使用 `${@脚本名称 | 参数}` 的格式引用脚本，可以动态生成卡片引用。

在页面里提供的属性的优先级最高，会覆盖页面卡片中预先定义的属性。

纯XAML 页面
------------------------
纯XAML 页面允许用户直接使用 XAML 语言编写页面内容，适用于需要自定义复杂页面的场景。

要创建纯XAML页面，需要在工程文件夹的 `pages` 目录下创建一个页面描述文件 `<页面名称>.xaml`。

当构建器收到纯xaml页面的请求时，会直接返回该文件的内容。

不同于卡片堆叠页面，纯XAML页面需要用户自行处理页面的样式代码。